// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hw {
namespace trezor {
namespace messages {

namespace {

const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
}

void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\022\022hw.trezor.messages\032 go"
    "ogle/protobuf/descriptor.proto*\3401\n\013Messa"
    "geType\022$\n\026MessageType_Initialize\020\000\032\010\220\265\030\001"
    "\260\265\030\001\022\032\n\020MessageType_Ping\020\001\032\004\220\265\030\001\022\035\n\023Mess"
    "ageType_Success\020\002\032\004\230\265\030\001\022\035\n\023MessageType_F"
    "ailure\020\003\032\004\230\265\030\001\022\037\n\025MessageType_ChangePin\020"
    "\004\032\004\220\265\030\001\022 \n\026MessageType_WipeDevice\020\005\032\004\220\265\030"
    "\001\022 \n\026MessageType_GetEntropy\020\t\032\004\220\265\030\001\022\035\n\023M"
    "essageType_Entropy\020\n\032\004\230\265\030\001\022 \n\026MessageTyp"
    "e_LoadDevice\020\r\032\004\220\265\030\001\022!\n\027MessageType_Rese"
    "tDevice\020\016\032\004\220\265\030\001\022\036\n\024MessageType_Features\020"
    "\021\032\004\230\265\030\001\022&\n\034MessageType_PinMatrixRequest\020"
    "\022\032\004\230\265\030\001\022*\n\030MessageType_PinMatrixAck\020\023\032\014\220"
    "\265\030\001\260\265\030\001\300\265\030\001\022 \n\022MessageType_Cancel\020\024\032\010\220\265\030"
    "\001\260\265\030\001\022\"\n\030MessageType_ClearSession\020\030\032\004\220\265\030"
    "\001\022#\n\031MessageType_ApplySettings\020\031\032\004\220\265\030\001\022#"
    "\n\031MessageType_ButtonRequest\020\032\032\004\230\265\030\001\022\'\n\025M"
    "essageType_ButtonAck\020\033\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022 \n\026"
    "MessageType_ApplyFlags\020\034\032\004\220\265\030\001\022\"\n\030Messag"
    "eType_BackupDevice\020\"\032\004\220\265\030\001\022$\n\032MessageTyp"
    "e_EntropyRequest\020#\032\004\230\265\030\001\022 \n\026MessageType_"
    "EntropyAck\020$\032\004\220\265\030\001\022\'\n\035MessageType_Passph"
    "raseRequest\020)\032\004\230\265\030\001\022+\n\031MessageType_Passp"
    "hraseAck\020*\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022,\n\"MessageType_"
    "PassphraseStateRequest\020M\032\004\230\265\030\001\0220\n\036Messag"
    "eType_PassphraseStateAck\020N\032\014\220\265\030\001\260\265\030\001\300\265\030\001"
    "\022$\n\032MessageType_RecoveryDevice\020-\032\004\220\265\030\001\022!"
    "\n\027MessageType_WordRequest\020.\032\004\230\265\030\001\022\035\n\023Mes"
    "sageType_WordAck\020/\032\004\220\265\030\001\022!\n\027MessageType_"
    "GetFeatures\0207\032\004\220\265\030\001\022#\n\031MessageType_SetU2"
    "FCounter\020\?\032\004\220\265\030\001\022\'\n\031MessageType_Firmware"
    "Erase\020\006\032\010\220\265\030\001\270\265\030\001\022(\n\032MessageType_Firmwar"
    "eUpload\020\007\032\010\220\265\030\001\270\265\030\001\022)\n\033MessageType_Firmw"
    "areRequest\020\010\032\010\230\265\030\001\270\265\030\001\022\"\n\024MessageType_Se"
    "lfTest\020 \032\010\220\265\030\001\270\265\030\001\022\"\n\030MessageType_GetPub"
    "licKey\020\013\032\004\220\265\030\001\022\037\n\025MessageType_PublicKey\020"
    "\014\032\004\230\265\030\001\022\034\n\022MessageType_SignTx\020\017\032\004\220\265\030\001\022\037\n"
    "\025MessageType_TxRequest\020\025\032\004\230\265\030\001\022\033\n\021Messag"
    "eType_TxAck\020\026\032\004\220\265\030\001\022 \n\026MessageType_GetAd"
    "dress\020\035\032\004\220\265\030\001\022\035\n\023MessageType_Address\020\036\032\004"
    "\230\265\030\001\022!\n\027MessageType_SignMessage\020&\032\004\220\265\030\001\022"
    "#\n\031MessageType_VerifyMessage\020\'\032\004\220\265\030\001\022&\n\034"
    "MessageType_MessageSignature\020(\032\004\230\265\030\001\022$\n\032"
    "MessageType_CipherKeyValue\020\027\032\004\220\265\030\001\022&\n\034Me"
    "ssageType_CipheredKeyValue\0200\032\004\230\265\030\001\022\"\n\030Me"
    "ssageType_SignIdentity\0205\032\004\220\265\030\001\022$\n\032Messag"
    "eType_SignedIdentity\0206\032\004\230\265\030\001\022\'\n\035MessageT"
    "ype_GetECDHSessionKey\020=\032\004\220\265\030\001\022$\n\032Message"
    "Type_ECDHSessionKey\020>\032\004\230\265\030\001\022 \n\026MessageTy"
    "pe_CosiCommit\020G\032\004\220\265\030\001\022$\n\032MessageType_Cos"
    "iCommitment\020H\032\004\230\265\030\001\022\036\n\024MessageType_CosiS"
    "ign\020I\032\004\220\265\030\001\022#\n\031MessageType_CosiSignature"
    "\020J\032\004\230\265\030\001\022/\n\035MessageType_DebugLinkDecisio"
    "n\020d\032\014\240\265\030\001\260\265\030\001\300\265\030\001\022+\n\035MessageType_DebugLi"
    "nkGetState\020e\032\010\240\265\030\001\260\265\030\001\022$\n\032MessageType_De"
    "bugLinkState\020f\032\004\250\265\030\001\022#\n\031MessageType_Debu"
    "gLinkStop\020g\032\004\240\265\030\001\022\"\n\030MessageType_DebugLi"
    "nkLog\020h\032\004\250\265\030\001\022)\n\037MessageType_DebugLinkMe"
    "moryRead\020n\032\004\240\265\030\001\022%\n\033MessageType_DebugLin"
    "kMemory\020o\032\004\250\265\030\001\022*\n MessageType_DebugLink"
    "MemoryWrite\020p\032\004\240\265\030\001\022)\n\037MessageType_Debug"
    "LinkFlashErase\020q\032\004\240\265\030\001\022(\n\036MessageType_Et"
    "hereumGetAddress\0208\032\004\220\265\030\001\022%\n\033MessageType_"
    "EthereumAddress\0209\032\004\230\265\030\001\022$\n\032MessageType_E"
    "thereumSignTx\020:\032\004\220\265\030\001\022\'\n\035MessageType_Eth"
    "ereumTxRequest\020;\032\004\230\265\030\001\022#\n\031MessageType_Et"
    "hereumTxAck\020<\032\004\220\265\030\001\022)\n\037MessageType_Ether"
    "eumSignMessage\020@\032\004\220\265\030\001\022+\n!MessageType_Et"
    "hereumVerifyMessage\020A\032\004\220\265\030\001\022.\n$MessageTy"
    "pe_EthereumMessageSignature\020B\032\004\230\265\030\001\022#\n\031M"
    "essageType_NEMGetAddress\020C\032\004\220\265\030\001\022 \n\026Mess"
    "ageType_NEMAddress\020D\032\004\230\265\030\001\022\037\n\025MessageTyp"
    "e_NEMSignTx\020E\032\004\220\265\030\001\022!\n\027MessageType_NEMSi"
    "gnedTx\020F\032\004\230\265\030\001\022\'\n\035MessageType_NEMDecrypt"
    "Message\020K\032\004\220\265\030\001\022)\n\037MessageType_NEMDecryp"
    "tedMessage\020L\032\004\230\265\030\001\022$\n\032MessageType_LiskGe"
    "tAddress\020r\032\004\220\265\030\001\022!\n\027MessageType_LiskAddr"
    "ess\020s\032\004\230\265\030\001\022 \n\026MessageType_LiskSignTx\020t\032"
    "\004\220\265\030\001\022\"\n\030MessageType_LiskSignedTx\020u\032\004\230\265\030"
    "\001\022%\n\033MessageType_LiskSignMessage\020v\032\004\220\265\030\001"
    "\022*\n MessageType_LiskMessageSignature\020w\032\004"
    "\230\265\030\001\022\'\n\035MessageType_LiskVerifyMessage\020x\032"
    "\004\220\265\030\001\022&\n\034MessageType_LiskGetPublicKey\020y\032"
    "\004\220\265\030\001\022#\n\031MessageType_LiskPublicKey\020z\032\004\230\265"
    "\030\001\022&\n\033MessageType_TezosGetAddress\020\226\001\032\004\220\265"
    "\030\001\022#\n\030MessageType_TezosAddress\020\227\001\032\004\230\265\030\001\022"
    "\"\n\027MessageType_TezosSignTx\020\230\001\032\004\220\265\030\001\022$\n\031M"
    "essageType_TezosSignedTx\020\231\001\032\004\230\265\030\001\022(\n\035Mes"
    "sageType_TezosGetPublicKey\020\232\001\032\004\220\265\030\001\022%\n\032M"
    "essageType_TezosPublicKey\020\233\001\032\004\230\265\030\001\022*\n\037Me"
    "ssageType_StellarGetPublicKey\020\310\001\032\004\220\265\030\001\022\'"
    "\n\034MessageType_StellarPublicKey\020\311\001\032\004\230\265\030\001\022"
    "$\n\031MessageType_StellarSignTx\020\312\001\032\004\220\265\030\001\022)\n"
    "\036MessageType_StellarTxOpRequest\020\313\001\032\004\230\265\030\001"
    "\022(\n\035MessageType_StellarGetAddress\020\317\001\032\004\220\265"
    "\030\001\022%\n\032MessageType_StellarAddress\020\320\001\032\004\230\265\030"
    "\001\022-\n\"MessageType_StellarCreateAccountOp\020"
    "\322\001\032\004\220\265\030\001\022\'\n\034MessageType_StellarPaymentOp"
    "\020\323\001\032\004\220\265\030\001\022+\n MessageType_StellarPathPaym"
    "entOp\020\324\001\032\004\220\265\030\001\022+\n MessageType_StellarMan"
    "ageOfferOp\020\325\001\032\004\220\265\030\001\0222\n\'MessageType_Stell"
    "arCreatePassiveOfferOp\020\326\001\032\004\220\265\030\001\022*\n\037Messa"
    "geType_StellarSetOptionsOp\020\327\001\032\004\220\265\030\001\022+\n M"
    "essageType_StellarChangeTrustOp\020\330\001\032\004\220\265\030\001"
    "\022*\n\037MessageType_StellarAllowTrustOp\020\331\001\032\004"
    "\220\265\030\001\022,\n!MessageType_StellarAccountMergeO"
    "p\020\332\001\032\004\220\265\030\001\022*\n\037MessageType_StellarManageD"
    "ataOp\020\334\001\032\004\220\265\030\001\022,\n!MessageType_StellarBum"
    "pSequenceOp\020\335\001\032\004\220\265\030\001\022&\n\033MessageType_Stel"
    "larSignedTx\020\346\001\032\004\230\265\030\001\022)\n\036MessageType_Card"
    "anoSignMessage\020\254\002\032\004\220\265\030\001\022.\n#MessageType_C"
    "ardanoMessageSignature\020\255\002\032\004\230\265\030\001\022+\n Messa"
    "geType_CardanoVerifyMessage\020\256\002\032\004\220\265\030\001\022-\n\""
    "MessageType_CardanoSignTransaction\020\257\002\032\004\220"
    "\265\030\001\022\'\n\034MessageType_CardanoTxRequest\020\260\002\032\004"
    "\230\265\030\001\022*\n\037MessageType_CardanoGetPublicKey\020"
    "\261\002\032\004\220\265\030\001\022\'\n\034MessageType_CardanoPublicKey"
    "\020\262\002\032\004\230\265\030\001\022(\n\035MessageType_CardanoGetAddre"
    "ss\020\263\002\032\004\220\265\030\001\022%\n\032MessageType_CardanoAddres"
    "s\020\264\002\032\004\230\265\030\001\022#\n\030MessageType_CardanoTxAck\020\265"
    "\002\032\004\220\265\030\001\022/\n$MessageType_CardanoSignedTran"
    "saction\020\266\002\032\004\230\265\030\001\022)\n\036MessageType_Ontology"
    "GetAddress\020\336\002\032\004\220\265\030\001\022&\n\033MessageType_Ontol"
    "ogyAddress\020\337\002\032\004\230\265\030\001\022+\n MessageType_Ontol"
    "ogyGetPublicKey\020\340\002\032\004\220\265\030\001\022(\n\035MessageType_"
    "OntologyPublicKey\020\341\002\032\004\230\265\030\001\022%\n\032MessageTyp"
    "e_OntologySignTx\020\342\002\032\004\220\265\030\001\022\'\n\034MessageType"
    "_OntologySignedTx\020\343\002\032\004\230\265\030\001\022+\n MessageTyp"
    "e_OntologySignTransfer\020\344\002\032\004\220\265\030\001\022-\n\"Messa"
    "geType_OntologySignedTransfer\020\345\002\032\004\230\265\030\001\022."
    "\n#MessageType_OntologySignWithdrawOng\020\346\002"
    "\032\004\220\265\030\001\0220\n%MessageType_OntologySignedWith"
    "drawOng\020\347\002\032\004\230\265\030\001\022\'\n\034MessageType_RippleGe"
    "tAddress\020\220\003\032\004\220\265\030\001\022$\n\031MessageType_RippleA"
    "ddress\020\221\003\032\004\230\265\030\001\022#\n\030MessageType_RippleSig"
    "nTx\020\222\003\032\004\220\265\030\001\022%\n\032MessageType_RippleSigned"
    "Tx\020\223\003\032\004\220\265\030\001\0223\n(MessageType_MoneroTransac"
    "tionSignRequest\020\365\003\032\004\220\265\030\001\022/\n$MessageType_"
    "MoneroTransactionInitAck\020\366\003\032\004\230\265\030\001\0223\n(Mes"
    "sageType_MoneroTransactionSetInputAck\020\367\003"
    "\032\004\230\265\030\001\022<\n1MessageType_MoneroTransactionI"
    "nputsPermutationAck\020\370\003\032\004\230\265\030\001\0224\n)MessageT"
    "ype_MoneroTransactionInputViniAck\020\371\003\032\004\230\265"
    "\030\001\0224\n)MessageType_MoneroTransactionSetOu"
    "tputAck\020\372\003\032\004\230\265\030\001\0224\n)MessageType_MoneroTr"
    "ansactionAllOutSetAck\020\373\003\032\004\230\265\030\001\0224\n)Messag"
    "eType_MoneroTransactionMlsagDoneAck\020\374\003\032\004"
    "\230\265\030\001\0224\n)MessageType_MoneroTransactionSig"
    "nInputAck\020\375\003\032\004\230\265\030\001\0220\n%MessageType_Monero"
    "TransactionFinalAck\020\376\003\032\004\230\265\030\001\0220\n%MessageT"
    "ype_MoneroKeyImageSyncRequest\020\377\003\032\004\220\265\030\001\0222"
    "\n\'MessageType_MoneroKeyImageExportInitAc"
    "k\020\210\004\032\004\230\265\030\001\0220\n%MessageType_MoneroKeyImage"
    "SyncStepAck\020\211\004\032\004\230\265\030\001\0221\n&MessageType_Mone"
    "roKeyImageSyncFinalAck\020\212\004\032\004\230\265\030\001\022\'\n\034Messa"
    "geType_MoneroGetAddress\020\222\004\032\004\220\265\030\001\022$\n\031Mess"
    "ageType_MoneroAddress\020\223\004\032\004\230\265\030\001\022(\n\035Messag"
    "eType_MoneroGetWatchKey\020\224\004\032\004\220\265\030\001\022%\n\032Mess"
    "ageType_MoneroWatchKey\020\225\004\032\004\230\265\030\001\022-\n\"Messa"
    "geType_DebugMoneroDiagRequest\020\230\004\032\004\220\265\030\001\022)"
    "\n\036MessageType_DebugMoneroDiagAck\020\231\004\032\004\230\265\030"
    "\001:4\n\007wire_in\022!.google.protobuf.EnumValue"
    "Options\030\322\206\003 \001(\010:5\n\010wire_out\022!.google.pro"
    "tobuf.EnumValueOptions\030\323\206\003 \001(\010::\n\rwire_d"
    "ebug_in\022!.google.protobuf.EnumValueOptio"
    "ns\030\324\206\003 \001(\010:;\n\016wire_debug_out\022!.google.pr"
    "otobuf.EnumValueOptions\030\325\206\003 \001(\010:6\n\twire_"
    "tiny\022!.google.protobuf.EnumValueOptions\030"
    "\326\206\003 \001(\010:<\n\017wire_bootloader\022!.google.prot"
    "obuf.EnumValueOptions\030\327\206\003 \001(\010:8\n\013wire_no"
    "_fsm\022!.google.protobuf.EnumValueOptions\030"
    "\330\206\003 \001(\010B4\n#com.satoshilabs.trezor.lib.pr"
    "otobufB\rTrezorMessage", 6901);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50002, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50003, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50004, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50005, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50006, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50007, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50008, 8, false, false);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 34:
    case 35:
    case 36:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 45:
    case 46:
    case 47:
    case 48:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 200:
    case 201:
    case 202:
    case 203:
    case 207:
    case 208:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 220:
    case 221:
    case 230:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 400:
    case 401:
    case 402:
    case 403:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 520:
    case 521:
    case 522:
    case 530:
    case 531:
    case 532:
    case 533:
    case 536:
    case 537:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_in(kWireInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_out(kWireOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_in(kWireDebugInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_out(kWireDebugOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_tiny(kWireTinyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_bootloader(kWireBootloaderFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_no_fsm(kWireNoFsmFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace trezor
}  // namespace hw

// @@protoc_insertion_point(global_scope)
