// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
}

void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\032 google/protobuf/descri"
    "ptor.proto*\250.\n\013MessageType\022$\n\026MessageTyp"
    "e_Initialize\020\000\032\010\220\265\030\001\260\265\030\001\022\032\n\020MessageType_"
    "Ping\020\001\032\004\220\265\030\001\022\035\n\023MessageType_Success\020\002\032\004\230"
    "\265\030\001\022\035\n\023MessageType_Failure\020\003\032\004\230\265\030\001\022\037\n\025Me"
    "ssageType_ChangePin\020\004\032\004\220\265\030\001\022 \n\026MessageTy"
    "pe_WipeDevice\020\005\032\004\220\265\030\001\022 \n\026MessageType_Get"
    "Entropy\020\t\032\004\220\265\030\001\022\035\n\023MessageType_Entropy\020\n"
    "\032\004\230\265\030\001\022 \n\026MessageType_LoadDevice\020\r\032\004\220\265\030\001"
    "\022!\n\027MessageType_ResetDevice\020\016\032\004\220\265\030\001\022\036\n\024M"
    "essageType_Features\020\021\032\004\230\265\030\001\022&\n\034MessageTy"
    "pe_PinMatrixRequest\020\022\032\004\230\265\030\001\022*\n\030MessageTy"
    "pe_PinMatrixAck\020\023\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022 \n\022Messa"
    "geType_Cancel\020\024\032\010\220\265\030\001\260\265\030\001\022\"\n\030MessageType"
    "_ClearSession\020\030\032\004\220\265\030\001\022#\n\031MessageType_App"
    "lySettings\020\031\032\004\220\265\030\001\022#\n\031MessageType_Button"
    "Request\020\032\032\004\230\265\030\001\022\'\n\025MessageType_ButtonAck"
    "\020\033\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022 \n\026MessageType_ApplyFla"
    "gs\020\034\032\004\220\265\030\001\022\"\n\030MessageType_BackupDevice\020\""
    "\032\004\220\265\030\001\022$\n\032MessageType_EntropyRequest\020#\032\004"
    "\230\265\030\001\022 \n\026MessageType_EntropyAck\020$\032\004\220\265\030\001\022\'"
    "\n\035MessageType_PassphraseRequest\020)\032\004\230\265\030\001\022"
    "+\n\031MessageType_PassphraseAck\020*\032\014\220\265\030\001\260\265\030\001"
    "\300\265\030\001\022,\n\"MessageType_PassphraseStateReque"
    "st\020M\032\004\230\265\030\001\0220\n\036MessageType_PassphraseStat"
    "eAck\020N\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022$\n\032MessageType_Reco"
    "veryDevice\020-\032\004\220\265\030\001\022!\n\027MessageType_WordRe"
    "quest\020.\032\004\230\265\030\001\022\035\n\023MessageType_WordAck\020/\032\004"
    "\220\265\030\001\022!\n\027MessageType_GetFeatures\0207\032\004\220\265\030\001\022"
    "#\n\031MessageType_SetU2FCounter\020\?\032\004\220\265\030\001\022\'\n\031"
    "MessageType_FirmwareErase\020\006\032\010\220\265\030\001\270\265\030\001\022(\n"
    "\032MessageType_FirmwareUpload\020\007\032\010\220\265\030\001\270\265\030\001\022"
    ")\n\033MessageType_FirmwareRequest\020\010\032\010\230\265\030\001\270\265"
    "\030\001\022\"\n\024MessageType_SelfTest\020 \032\010\220\265\030\001\270\265\030\001\022\""
    "\n\030MessageType_GetPublicKey\020\013\032\004\220\265\030\001\022\037\n\025Me"
    "ssageType_PublicKey\020\014\032\004\230\265\030\001\022\034\n\022MessageTy"
    "pe_SignTx\020\017\032\004\220\265\030\001\022\037\n\025MessageType_TxReque"
    "st\020\025\032\004\230\265\030\001\022\033\n\021MessageType_TxAck\020\026\032\004\220\265\030\001\022"
    " \n\026MessageType_GetAddress\020\035\032\004\220\265\030\001\022\035\n\023Mes"
    "sageType_Address\020\036\032\004\230\265\030\001\022!\n\027MessageType_"
    "SignMessage\020&\032\004\220\265\030\001\022#\n\031MessageType_Verif"
    "yMessage\020\'\032\004\220\265\030\001\022&\n\034MessageType_MessageS"
    "ignature\020(\032\004\230\265\030\001\022$\n\032MessageType_CipherKe"
    "yValue\020\027\032\004\220\265\030\001\022&\n\034MessageType_CipheredKe"
    "yValue\0200\032\004\230\265\030\001\022\"\n\030MessageType_SignIdenti"
    "ty\0205\032\004\220\265\030\001\022$\n\032MessageType_SignedIdentity"
    "\0206\032\004\230\265\030\001\022\'\n\035MessageType_GetECDHSessionKe"
    "y\020=\032\004\220\265\030\001\022$\n\032MessageType_ECDHSessionKey\020"
    ">\032\004\230\265\030\001\022 \n\026MessageType_CosiCommit\020G\032\004\220\265\030"
    "\001\022$\n\032MessageType_CosiCommitment\020H\032\004\230\265\030\001\022"
    "\036\n\024MessageType_CosiSign\020I\032\004\220\265\030\001\022#\n\031Messa"
    "geType_CosiSignature\020J\032\004\230\265\030\001\022/\n\035MessageT"
    "ype_DebugLinkDecision\020d\032\014\240\265\030\001\260\265\030\001\300\265\030\001\022+\n"
    "\035MessageType_DebugLinkGetState\020e\032\010\240\265\030\001\260\265"
    "\030\001\022$\n\032MessageType_DebugLinkState\020f\032\004\250\265\030\001"
    "\022#\n\031MessageType_DebugLinkStop\020g\032\004\240\265\030\001\022\"\n"
    "\030MessageType_DebugLinkLog\020h\032\004\250\265\030\001\022)\n\037Mes"
    "sageType_DebugLinkMemoryRead\020n\032\004\240\265\030\001\022%\n\033"
    "MessageType_DebugLinkMemory\020o\032\004\250\265\030\001\022*\n M"
    "essageType_DebugLinkMemoryWrite\020p\032\004\240\265\030\001\022"
    ")\n\037MessageType_DebugLinkFlashErase\020q\032\004\240\265"
    "\030\001\022(\n\036MessageType_EthereumGetAddress\0208\032\004"
    "\220\265\030\001\022%\n\033MessageType_EthereumAddress\0209\032\004\230"
    "\265\030\001\022$\n\032MessageType_EthereumSignTx\020:\032\004\220\265\030"
    "\001\022\'\n\035MessageType_EthereumTxRequest\020;\032\004\230\265"
    "\030\001\022#\n\031MessageType_EthereumTxAck\020<\032\004\220\265\030\001\022"
    ")\n\037MessageType_EthereumSignMessage\020@\032\004\220\265"
    "\030\001\022+\n!MessageType_EthereumVerifyMessage\020"
    "A\032\004\220\265\030\001\022.\n$MessageType_EthereumMessageSi"
    "gnature\020B\032\004\230\265\030\001\022#\n\031MessageType_NEMGetAdd"
    "ress\020C\032\004\220\265\030\001\022 \n\026MessageType_NEMAddress\020D"
    "\032\004\230\265\030\001\022\037\n\025MessageType_NEMSignTx\020E\032\004\220\265\030\001\022"
    "!\n\027MessageType_NEMSignedTx\020F\032\004\230\265\030\001\022\'\n\035Me"
    "ssageType_NEMDecryptMessage\020K\032\004\220\265\030\001\022)\n\037M"
    "essageType_NEMDecryptedMessage\020L\032\004\230\265\030\001\022$"
    "\n\032MessageType_LiskGetAddress\020r\032\004\220\265\030\001\022!\n\027"
    "MessageType_LiskAddress\020s\032\004\230\265\030\001\022 \n\026Messa"
    "geType_LiskSignTx\020t\032\004\220\265\030\001\022\"\n\030MessageType"
    "_LiskSignedTx\020u\032\004\230\265\030\001\022%\n\033MessageType_Lis"
    "kSignMessage\020v\032\004\220\265\030\001\022*\n MessageType_Lisk"
    "MessageSignature\020w\032\004\230\265\030\001\022\'\n\035MessageType_"
    "LiskVerifyMessage\020x\032\004\220\265\030\001\022&\n\034MessageType"
    "_LiskGetPublicKey\020y\032\004\220\265\030\001\022#\n\031MessageType"
    "_LiskPublicKey\020z\032\004\230\265\030\001\022&\n\033MessageType_Te"
    "zosGetAddress\020\226\001\032\004\220\265\030\001\022#\n\030MessageType_Te"
    "zosAddress\020\227\001\032\004\230\265\030\001\022\"\n\027MessageType_Tezos"
    "SignTx\020\230\001\032\004\220\265\030\001\022$\n\031MessageType_TezosSign"
    "edTx\020\231\001\032\004\230\265\030\001\022(\n\035MessageType_TezosGetPub"
    "licKey\020\232\001\032\004\220\265\030\001\022%\n\032MessageType_TezosPubl"
    "icKey\020\233\001\032\004\230\265\030\001\022*\n\037MessageType_StellarGet"
    "PublicKey\020\310\001\032\004\220\265\030\001\022\'\n\034MessageType_Stella"
    "rPublicKey\020\311\001\032\004\230\265\030\001\022$\n\031MessageType_Stell"
    "arSignTx\020\312\001\032\004\220\265\030\001\022)\n\036MessageType_Stellar"
    "TxOpRequest\020\313\001\032\004\230\265\030\001\022(\n\035MessageType_Stel"
    "larGetAddress\020\317\001\032\004\220\265\030\001\022%\n\032MessageType_St"
    "ellarAddress\020\320\001\032\004\230\265\030\001\022-\n\"MessageType_Ste"
    "llarCreateAccountOp\020\322\001\032\004\220\265\030\001\022\'\n\034MessageT"
    "ype_StellarPaymentOp\020\323\001\032\004\220\265\030\001\022+\n Message"
    "Type_StellarPathPaymentOp\020\324\001\032\004\220\265\030\001\022+\n Me"
    "ssageType_StellarManageOfferOp\020\325\001\032\004\220\265\030\001\022"
    "2\n\'MessageType_StellarCreatePassiveOffer"
    "Op\020\326\001\032\004\220\265\030\001\022*\n\037MessageType_StellarSetOpt"
    "ionsOp\020\327\001\032\004\220\265\030\001\022+\n MessageType_StellarCh"
    "angeTrustOp\020\330\001\032\004\220\265\030\001\022*\n\037MessageType_Stel"
    "larAllowTrustOp\020\331\001\032\004\220\265\030\001\022,\n!MessageType_"
    "StellarAccountMergeOp\020\332\001\032\004\220\265\030\001\022*\n\037Messag"
    "eType_StellarManageDataOp\020\334\001\032\004\220\265\030\001\022,\n!Me"
    "ssageType_StellarBumpSequenceOp\020\335\001\032\004\220\265\030\001"
    "\022&\n\033MessageType_StellarSignedTx\020\346\001\032\004\230\265\030\001"
    "\022)\n\036MessageType_CardanoSignMessage\020\254\002\032\004\220"
    "\265\030\001\022.\n#MessageType_CardanoMessageSignatu"
    "re\020\255\002\032\004\230\265\030\001\022+\n MessageType_CardanoVerify"
    "Message\020\256\002\032\004\220\265\030\001\022-\n\"MessageType_CardanoS"
    "ignTransaction\020\257\002\032\004\220\265\030\001\022\'\n\034MessageType_C"
    "ardanoTxRequest\020\260\002\032\004\230\265\030\001\022*\n\037MessageType_"
    "CardanoGetPublicKey\020\261\002\032\004\220\265\030\001\022\'\n\034MessageT"
    "ype_CardanoPublicKey\020\262\002\032\004\230\265\030\001\022(\n\035Message"
    "Type_CardanoGetAddress\020\263\002\032\004\220\265\030\001\022%\n\032Messa"
    "geType_CardanoAddress\020\264\002\032\004\230\265\030\001\022#\n\030Messag"
    "eType_CardanoTxAck\020\265\002\032\004\220\265\030\001\022/\n$MessageTy"
    "pe_CardanoSignedTransaction\020\266\002\032\004\230\265\030\001\022\'\n\034"
    "MessageType_RippleGetAddress\020\220\003\032\004\220\265\030\001\022$\n"
    "\031MessageType_RippleAddress\020\221\003\032\004\230\265\030\001\022#\n\030M"
    "essageType_RippleSignTx\020\222\003\032\004\220\265\030\001\022%\n\032Mess"
    "ageType_RippleSignedTx\020\223\003\032\004\220\265\030\001\0223\n(Messa"
    "geType_MoneroTransactionSignRequest\020\365\003\032\004"
    "\220\265\030\001\022/\n$MessageType_MoneroTransactionIni"
    "tAck\020\366\003\032\004\230\265\030\001\0223\n(MessageType_MoneroTrans"
    "actionSetInputAck\020\367\003\032\004\230\265\030\001\022<\n1MessageTyp"
    "e_MoneroTransactionInputsPermutationAck\020"
    "\370\003\032\004\230\265\030\001\0224\n)MessageType_MoneroTransactio"
    "nInputViniAck\020\371\003\032\004\230\265\030\001\0224\n)MessageType_Mo"
    "neroTransactionSetOutputAck\020\372\003\032\004\230\265\030\001\0224\n)"
    "MessageType_MoneroTransactionAllOutSetAc"
    "k\020\373\003\032\004\230\265\030\001\0224\n)MessageType_MoneroTransact"
    "ionMlsagDoneAck\020\374\003\032\004\230\265\030\001\0224\n)MessageType_"
    "MoneroTransactionSignInputAck\020\375\003\032\004\230\265\030\001\0220"
    "\n%MessageType_MoneroTransactionFinalAck\020"
    "\376\003\032\004\230\265\030\001\0220\n%MessageType_MoneroKeyImageSy"
    "ncRequest\020\377\003\032\004\220\265\030\001\0222\n\'MessageType_Monero"
    "KeyImageExportInitAck\020\210\004\032\004\230\265\030\001\0220\n%Messag"
    "eType_MoneroKeyImageSyncStepAck\020\211\004\032\004\230\265\030\001"
    "\0221\n&MessageType_MoneroKeyImageSyncFinalA"
    "ck\020\212\004\032\004\230\265\030\001\022\'\n\034MessageType_MoneroGetAddr"
    "ess\020\222\004\032\004\220\265\030\001\022$\n\031MessageType_MoneroAddres"
    "s\020\223\004\032\004\230\265\030\001\022(\n\035MessageType_MoneroGetWatch"
    "Key\020\224\004\032\004\220\265\030\001\022%\n\032MessageType_MoneroWatchK"
    "ey\020\225\004\032\004\230\265\030\001\022-\n\"MessageType_DebugMoneroDi"
    "agRequest\020\230\004\032\004\220\265\030\001\022)\n\036MessageType_DebugM"
    "oneroDiagAck\020\231\004\032\004\230\265\030\001:4\n\007wire_in\022!.googl"
    "e.protobuf.EnumValueOptions\030\322\206\003 \001(\010:5\n\010w"
    "ire_out\022!.google.protobuf.EnumValueOptio"
    "ns\030\323\206\003 \001(\010::\n\rwire_debug_in\022!.google.pro"
    "tobuf.EnumValueOptions\030\324\206\003 \001(\010:;\n\016wire_d"
    "ebug_out\022!.google.protobuf.EnumValueOpti"
    "ons\030\325\206\003 \001(\010:6\n\twire_tiny\022!.google.protob"
    "uf.EnumValueOptions\030\326\206\003 \001(\010:<\n\017wire_boot"
    "loader\022!.google.protobuf.EnumValueOption"
    "s\030\327\206\003 \001(\010:8\n\013wire_no_fsm\022!.google.protob"
    "uf.EnumValueOptions\030\330\206\003 \001(\010B4\n#com.satos"
    "hilabs.trezor.lib.protobufB\rTrezorMessag"
    "e", 6441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50002, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50003, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50004, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50005, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50006, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50007, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::EnumValueOptions::default_instance(),
    50008, 8, false, false);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 34:
    case 35:
    case 36:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 45:
    case 46:
    case 47:
    case 48:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 200:
    case 201:
    case 202:
    case 203:
    case 207:
    case 208:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 220:
    case 221:
    case 230:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 400:
    case 401:
    case 402:
    case 403:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 520:
    case 521:
    case 522:
    case 530:
    case 531:
    case 532:
    case 533:
    case 536:
    case 537:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_in(kWireInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_out(kWireOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_in(kWireDebugInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_out(kWireDebugOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_tiny(kWireTinyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_bootloader(kWireBootloaderFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_no_fsm(kWireNoFsmFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
